@use '../base/variables' as *;
@use '../functions/breakpoints' as breakpoint;


.display-section {
    display: flex;
    flex-direction: row;
    gap: $gap-medium;
    margin-bottom: $gap-large;
    height: 100px;
}

.visualizer {
	display: flex;
	height: 100%;
	width: 300px;
    background: var(--visualizer-color);
	box-shadow: var(--visualizer-shadow);
	border-radius: $border-radius;
	justify-content: center;
	align-items: center;
	position: relative;
	overflow: hidden;

	// Add screen scanlines effect
	&::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: repeating-linear-gradient(
			0deg,
			transparent,
			transparent 2px,
			rgba(0, 255, 0, 0.03) 2px,
			rgba(0, 255, 0, 0.03) 4px
		);
		pointer-events: none;
		z-index: 5;
	}
	
	// Add screen curvature effect
	&::after {
		content: '';
		position: absolute;
		top: 2px;
		left: 2px;
		right: 2px;
		bottom: 2px;
		border-radius: 6px;
		background: radial-gradient(
			ellipse at center,
			transparent 50%,
			rgba(0, 0, 0, 0.1) 100%
		);
		pointer-events: none;
		z-index: 6;
	}

    &__text {
        position: absolute;
        bottom: 0;
        left: 50%;
        margin-bottom: 2px;
        transform: translateX(-50%);
        filter: drop-shadow(0 0 4px rgba(0, 255, 0, 0.7));
        width: 100%;
        color: $silk;
        font-size: 10px;
        font-weight: 600;
        letter-spacing: 2px;
        text-transform: uppercase;
        text-align: center;
        pointer-events: none;
    }

    .waveform-canvas {
        width: 100%;
        height: 100%;
    }

    .spectrum-canvas {
        width: 100%;
        height: 100%;
    }
}

.volumemeter {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 60px;
    height: 100%;
    background: var(--visualizer-color);
	box-shadow: var(--visualizer-shadow);
    border-radius: $border-radius;
    padding: $gap-small $gap-small $gap-medium $gap-small;

    &__text {
        position: absolute;
        bottom: 0;
        left: 50%;
        margin-bottom: 2px;
        transform: translateX(-50%);
        width: 100%;
        color: $silk;
        font-size: 10px;
        font-weight: 600;
        text-transform: uppercase;
        text-align: center;
        pointer-events: none;
    }
}

    .volume-bar {
        flex: 1;
        width: 100%;
        height: 100%;
        background: linear-gradient(to bottom, #111, #000);
        border-radius: 6px;
        border: 1px solid #444;
        display: flex;
        flex-direction: column-reverse;
        gap: 1px;
        padding: 2px;
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.8);
        position: relative;
        
        // Add VU meter styling
        &::before {
            content: '';
            position: absolute;
            top: -8px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 8px;
            color: #666;
            font-family: 'Arial', sans-serif;
            font-weight: 700;
        }

        .volume-segments {
        display: flex;
        flex-direction: column-reverse;
        width: 100%;
        height: 100%;
        gap: 1px;
    }

    .volume-segment {
        flex: 1;
        width: 100%;
        background: #1a1a1a;
        border-radius: 1px;
        transition: all 0.05s ease;
        border: 1px solid #333;
        box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1);
        
        &.active {
            border-color: transparent;
            
            &.green {
                background: linear-gradient(to top, #00aa00, #00ff00);
                box-shadow: 
                    0 0 4px #00ff00,
                    inset 0 1px 0 rgba(255, 255, 255, 0.3);
            }
            
            &.yellow {
                background: linear-gradient(to top, #aa6600, #ffaa00);
                box-shadow: 
                    0 0 4px #ffaa00,
                    inset 0 1px 0 rgba(255, 255, 255, 0.3);
            }
            
            &.red {
                background: linear-gradient(to top, #aa0000, #ff0000);
                box-shadow: 
                    0 0 4px #ff0000,
                    inset 0 1px 0 rgba(255, 255, 255, 0.3);
            }
        }
    }
}

// Init Button Styling
.init-button-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 60px;
    height: 100%;
    background: var(--visualizer-color);
    box-shadow: var(--visualizer-shadow);
    border-radius: $border-radius;
    padding: $gap-small $gap-small $gap-medium $gap-small;
    position: relative;

    .init-button__text {
        position: absolute;
        bottom: 0;
        left: 50%;
        margin-bottom: 2px;
        transform: translateX(-50%);
        width: 100%;
        color: $silk;
        font-size: 10px;
        font-weight: 600;
        text-transform: uppercase;
        text-align: center;
        pointer-events: none;
    }
}

.init-button {
    flex: 1;
    width: 100%;
    background: var(--init-button-color);
    border: var(--init-button-border);
    border-radius: 6px;
    cursor: pointer;
    transition: all 0.15s ease;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: var(--init-button-shadow);
    
    // Hardware texture overlay
    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: 
            radial-gradient(circle at 25% 25%, rgba(255, 255, 255, 0.03) 0%, transparent 50%),
            repeating-linear-gradient(
                45deg,
                transparent,
                transparent 1px,
                rgba(255, 255, 255, 0.01) 1px,
                rgba(255, 255, 255, 0.01) 2px
            );
        border-radius: 6px;
        pointer-events: none;
    }
    
    &:hover {
        background: var(--init-button-hover-color);
        border-color: var(--init-button-hover-border);
        box-shadow: var(--init-button-hover-shadow);
        
        .led-indicator {
            background: var(--init-led-active-color);
            box-shadow: var(--init-led-active-shadow);
        }
    }
    
    &:active {
        transform: translateY(1px);
        box-shadow: 
            inset 0 1px 2px rgba(0, 0, 0, 0.9),
            inset 0 -1px 0 rgba(0, 0, 0, 0.3);
        
        .led-indicator {
            background: var(--init-led-pressed-color);
            box-shadow: var(--init-led-pressed-shadow);
        }
    }
    
    // Animation when pressed
    &.pressed {
        .led-indicator {
            animation: simpleLedFlash 0.3s ease-out;
        }
    }

    .led-indicator {
        width: 16px;
        height: 16px;
        border-radius: 50%;
        background: var(--init-led-color);
        border: var(--init-led-border);
        transition: all 0.15s ease;
        box-shadow: var(--init-led-shadow);
        position: relative;
        
        // LED highlight
        &::before {
            content: '';
            position: absolute;
            top: 2px;
            left: 2px;
            width: 4px;
            height: 4px;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.2);
            pointer-events: none;
        }
    }
}

// Simplified LED flash animation
@keyframes simpleLedFlash {
    0% {
        background: var(--init-led-pressed-color);
        box-shadow: var(--init-led-pressed-shadow);
    }
    100% {
        background: var(--init-led-color);
        box-shadow: var(--init-led-shadow);
    }
}