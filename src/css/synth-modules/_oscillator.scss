@use '../base/variables' as *;
@use '../functions/breakpoints' as breakpoint;

.oscillator-section {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 3fr));
    gap: $gap-medium;
    align-items: start;
}

.osc-group {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: $gap-small;
    background: linear-gradient(145deg, #404040 0%, #2e2e2e 100%);
    border-radius: 8px;
    padding: $gap-medium;
    border: 1px solid #555;
    box-shadow: 
        inset 0 1px 0 rgba(255, 255, 255, 0.1),
        0 2px 4px rgba(0, 0, 0, 0.3);

    // Modifier for dual knob layout
    &--dual {
        .dual-knobs {
            display: flex;
            gap: $gap-medium;
            width: 100%;
            justify-content: center;
            
            @include breakpoint.respond-to('mobile') {
                flex-direction: column;
                gap: $gap-small;
            }
        }
    }

    // Remove the old select styles and add button styles
    .waveform-buttons {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 4px;
        width: 140px;
        background: #111;
        padding: 4px;
        border-radius: 6px;
        border: 2px solid #333;
        
        @include breakpoint.respond-to('tablet') {
            width: 120px;
        }
        
        @include breakpoint.respond-to('mobile') {
            width: 100px;
        }
    }

    .waveform-btn {
        background: linear-gradient(145deg, #2a2a2a 0%, #1a1a1a 100%);
        border: 1px solid #444;
        border-radius: 3px;
        color: #888;
        font-family: 'Courier New', monospace;
        font-size: 10px;
        font-weight: 700;
        padding: 6px 2px;
        cursor: pointer;
        transition: all 0.1s ease;
        text-transform: uppercase;
        
        &:hover {
            background: linear-gradient(145deg, #333 0%, #222 100%);
            color: #aaa;
        }
        
        &.selected {
            background: linear-gradient(145deg, #00ff88 0%, #00cc66 100%);
            color: #000;
            border-color: #00ff88;
            box-shadow: 
                0 0 8px rgba(0, 255, 136, 0.3),
                inset 0 1px 0 rgba(255, 255, 255, 0.2);
        }
        
        @include breakpoint.respond-to('tablet') {
            font-size: 9px;
            padding: 5px 1px;
        }
        
        @include breakpoint.respond-to('mobile') {
            font-size: 8px;
            padding: 4px 1px;
        }
    }

    .knob-group {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: $gap-tiny;
    }

    .knob-label {
        color: #aaa;
        font-family: 'Arial', sans-serif;
        font-size: 10px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        
        @include breakpoint.respond-to('mobile') {
            font-size: 9px;
        }
    }

    // Hardware-style knob container
    .knob-container {
        position: relative;
        width: 80px;
        height: 80px;
        margin: $gap-small 0;
        
        @include breakpoint.respond-to('tablet') {
            width: 70px;
            height: 70px;
        }
        
        @include breakpoint.respond-to('mobile') {
            width: 60px;
            height: 60px;
        }
    }

    // Transform range inputs to look like knobs
    input[type="range"] {
        position: absolute;
        width: 100%;
        height: 100%;
        opacity: 0;
        cursor: pointer;
        z-index: 10;
        
        // Create knob appearance
        &::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 70px;
            height: 70px;
            background: radial-gradient(circle at 30% 30%, #666, #333, #111);
            border-radius: 50%;
            border: 3px solid #444;
            box-shadow: 
                0 8px 16px rgba(0, 0, 0, 0.6),
                inset 0 2px 4px rgba(255, 255, 255, 0.1),
                inset 0 -2px 4px rgba(0, 0, 0, 0.3);
            pointer-events: none;
            
            @include breakpoint.respond-to('tablet') {
                width: 60px;
                height: 60px;
            }
            
            @include breakpoint.respond-to('mobile') {
                width: 50px;
                height: 50px;
            }
        }
        
        // Knob indicator line
        &::after {
            content: '';
            position: absolute;
            top: 15px;
            left: 50%;
            transform: translateX(-50%);
            width: 3px;
            height: 20px;
            background: #00ff88;
            border-radius: 2px;
            box-shadow: 0 0 4px #00ff88;
            pointer-events: none;
            
            @include breakpoint.respond-to('tablet') {
                top: 12px;
                height: 18px;
                width: 2px;
            }
            
            @include breakpoint.respond-to('mobile') {
                top: 10px;
                height: 15px;
                width: 2px;
            }
        }
    }

    // Create actual visual knob
    .knob {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 70px;
        height: 70px;
        background: radial-gradient(circle at 30% 30%, #666, #333, #111);
        border-radius: 50%;
        border: 3px solid #444;
        box-shadow: 
            0 8px 16px rgba(0, 0, 0, 0.6),
            inset 0 2px 4px rgba(255, 255, 255, 0.1),
            inset 0 -2px 4px rgba(0, 0, 0, 0.3);
        pointer-events: none;
        transition: transform 0.1s ease;
        
        // Knob indicator
        &::before {
            content: '';
            position: absolute;
            top: 5px;
            left: 50%;
            transform: translateX(-50%);
            width: 3px;
            height: 20px;
            background: #00ff88;
            border-radius: 2px;
            box-shadow: 0 0 4px #00ff88;
        }
        
        // Center dot
        &::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 12px;
            height: 12px;
            background: linear-gradient(145deg, #555, #222);
            border-radius: 50%;
            border: 1px solid #666;
        }
        
        @include breakpoint.respond-to('tablet') {
            width: 60px;
            height: 60px;
            
            &::before {
                top: 4px;
                height: 18px;
                width: 2px;
            }
            
            &::after {
                width: 10px;
                height: 10px;
            }
        }
        
        @include breakpoint.respond-to('mobile') {
            width: 50px;
            height: 50px;
            
            &::before {
                top: 3px;
                height: 15px;
                width: 2px;
            }
            
            &::after {
                width: 8px;
                height: 8px;
            }
        }
    }

    // LED-style value displays
    .volume-display,
    .detune-display {
        background: linear-gradient(to bottom, #0a0a0a, #000);
        color: #00ff88;
        font-family: 'Courier New', monospace;
        font-size: 14px;
        font-weight: 700;
        text-align: center;
        padding: 8px 12px;
        border-radius: 4px;
        border: 1px solid #333;
        box-shadow: 
            inset 0 2px 4px rgba(0, 0, 0, 0.8),
            0 1px 0 rgba(255, 255, 255, 0.05);
        text-shadow: 0 0 4px #00ff88;
        min-width: 60px;
        
        @include breakpoint.respond-to('tablet') {
            font-size: 12px;
            padding: 6px 10px;
            min-width: 50px;
        }
        
        @include breakpoint.respond-to('mobile') {
            font-size: 11px;
            padding: 5px 8px;
            min-width: 45px;
        }
    }
}