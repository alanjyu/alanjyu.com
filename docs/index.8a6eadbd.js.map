{"mappings":"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","sources":["<anon>","src/js/main.js","src/js/_theme.js","src/js/_nav.js","src/js/_hover.js"],"sourcesContent":["// import Cursor from './components/cursor';\nclass $0691dea19d337f73$export$2e2bcd8739ae039 {\n    constructor(){\n        const themeCheckbox = document.querySelector('#checkbox');\n        const savedTheme = localStorage.getItem('theme');\n        const backgrounds = document.querySelectorAll('.fullframe');\n        // check the system theme\n        const getSystemTheme = ()=>{\n            return window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n        };\n        // check if savedTheme exists, if not use the system theme\n        const themeToApply = savedTheme ? savedTheme : getSystemTheme();\n        // apply the theme\n        document.documentElement.setAttribute('data-theme', themeToApply);\n        themeCheckbox.checked = themeToApply === 'dark';\n        this.toggleBackgroundDarken(themeToApply, backgrounds);\n        themeCheckbox.addEventListener('change', ()=>{\n            const newTheme = themeCheckbox.checked ? 'dark' : 'light';\n            document.documentElement.setAttribute('data-theme', newTheme);\n            localStorage.setItem('theme', newTheme);\n            this.toggleBackgroundDarken(newTheme, backgrounds);\n        });\n    }\n    toggleBackgroundDarken(theme, backgrounds) {\n        // darken backgrounds by adding .background--darken\n        backgrounds.forEach((background)=>{\n            if (theme === 'dark') background.classList.add('filter--darken');\n            else background.classList.remove('filter--darken');\n        });\n    }\n}\n\n\nclass $4f3d5d8c89b91b2c$export$2e2bcd8739ae039 {\n    constructor(){\n        this.navBurger = document.querySelector('.burger');\n        this.navBurgerInner = document.querySelector('.burger__inner');\n        this.navMenu = document.querySelector('.nav__menu');\n        this.navList = document.querySelector('.nav__list');\n        this.navLinks = document.querySelectorAll('.nav__list > li > a');\n        this.navLinkDefault = this.navList.querySelector('.link--default');\n        this.navRect = document.querySelector('.nav__rect');\n        this.setRectToLink(this.navLinkDefault);\n        this.navBurger.addEventListener('click', ()=>{\n            this.navBurgerInner.classList.toggle('burger__inner--active');\n            this.navMenu.classList.toggle('nav__menu--visible');\n        });\n        this.navLinks.forEach((link)=>{\n            link.addEventListener('mouseenter', ()=>{\n                // apply to a slower transition only when other links are hovered\n                this.navRect.style.transition = 'transform var(--animation-time)';\n                this.setRectToLink(link);\n            });\n            link.addEventListener('mouseleave', ()=>{\n                this.setRectToLink(this.navLinkDefault);\n            });\n        });\n    }\n    setRectToLink(linkElement) {\n        const linkRect = linkElement.getBoundingClientRect();\n        const navListRect = this.navList.getBoundingClientRect();\n        const offsetX = linkRect.left - navListRect.left;\n        this.navRect.style.transform = `translateX(${offsetX}px)`;\n    }\n}\n\n\nclass $e335b4938ad3ca6f$export$2e2bcd8739ae039 {\n    constructor(){\n        this.buttons = document.querySelectorAll('.hover-fill');\n        this.buttons.forEach((button)=>{\n            button.addEventListener('mouseenter', function(e) {\n                const parentOffset = button.getBoundingClientRect();\n                const relX = e.pageX - window.scrollX - parentOffset.left;\n                const relY = e.pageY - window.scrollY - parentOffset.top;\n                // Set CSS variables for `::after` positioning\n                button.style.setProperty('--hover-x', `${relX}px`);\n                button.style.setProperty('--hover-y', `${relY}px`);\n            });\n            button.addEventListener('mouseout', function(e) {\n                const parentOffset = button.getBoundingClientRect();\n                const relX = e.pageX - window.scrollX - parentOffset.left;\n                const relY = e.pageY - window.scrollY - parentOffset.top;\n                // Update `--hover-x` and `--hover-y` variables on mouse exit\n                button.style.setProperty('--hover-x', `${relX}px`);\n                button.style.setProperty('--hover-y', `${relY}px`);\n            });\n        });\n    }\n}\n\n\nconst $54b47fc030b7b21e$var$components = [\n    {\n        class: (0, $0691dea19d337f73$export$2e2bcd8739ae039),\n        selector: 'html'\n    },\n    {\n        class: (0, $4f3d5d8c89b91b2c$export$2e2bcd8739ae039),\n        selector: 'nav'\n    },\n    {\n        class: (0, $e335b4938ad3ca6f$export$2e2bcd8739ae039),\n        selector: 'html'\n    }\n];\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    /* Checks if the selector is loaded.\n\tIf so, then excecute the corresponding scripts and options */ $54b47fc030b7b21e$var$components.forEach((component)=>{\n        if (document.querySelector(component.selector) !== null) document.querySelectorAll(component.selector).forEach((element)=>new component.class(element, component.options));\n    });\n});\n\n\n//# sourceMappingURL=index.8a6eadbd.js.map\n","// import Cursor from './components/cursor';\nimport Theme from './_theme.js';\nimport Nav from './_nav.js';\nimport Hover from './_hover.js';\n\nconst components = [\n\t{\n\t\tclass: Theme,\n\t\tselector: 'html'\n\t},\n\t{\n\t\tclass: Nav,\n\t\tselector: 'nav'\n\t},\n\t{\n\t\tclass: Hover,\n\t\tselector: 'html'\n\t}\n];\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\t/* Checks if the selector is loaded.\n\tIf so, then excecute the corresponding scripts and options */\n\tcomponents.forEach(component => {\n\t\tif (document.querySelector(component.selector) !== null) {\n\t\t\tdocument.querySelectorAll(component.selector).forEach(\n\t\t\t\telement => new component.class(element, component.options)\n\t\t\t);\n\t\t};\n\t});\t\n});","export default class Theme {\n  constructor() {\n    const themeCheckbox = document.querySelector('#checkbox');\n    const savedTheme = localStorage.getItem('theme');\n    const backgrounds = document.querySelectorAll('.fullframe');\n\n    // check the system theme\n    const getSystemTheme = () => {\n      return window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n    };\n\n    // check if savedTheme exists, if not use the system theme\n    const themeToApply = savedTheme ? savedTheme : getSystemTheme();\n\n    // apply the theme\n    document.documentElement.setAttribute('data-theme', themeToApply);\n    themeCheckbox.checked = themeToApply === 'dark';\n    this.toggleBackgroundDarken(themeToApply, backgrounds);\n    \n    themeCheckbox.addEventListener('change', () => {\n      const newTheme = themeCheckbox.checked ? 'dark' : 'light';\n  \n      document.documentElement.setAttribute('data-theme', newTheme);\n      localStorage.setItem('theme', newTheme);\n      this.toggleBackgroundDarken(newTheme, backgrounds);\n    });      \n  }\n\n  toggleBackgroundDarken(theme, backgrounds) {\n    // darken backgrounds by adding .background--darken\n    backgrounds.forEach(background => {\n      if (theme === 'dark') {\n        background.classList.add('filter--darken');\n      } else {\n        background.classList.remove('filter--darken');\n      }\n    });\n  }\n}","export default class Nav {\n    constructor() {\n        this.navBurger = document.querySelector('.burger');\n        this.navBurgerInner = document.querySelector('.burger__inner');\n        \n        this.navMenu = document.querySelector('.nav__menu'); \n        this.navList = document.querySelector('.nav__list');\n        this.navLinks = document.querySelectorAll('.nav__list > li > a');\n        this.navLinkDefault = this.navList.querySelector('.link--default');\n        this.navRect = document.querySelector('.nav__rect');\n\n        this.setRectToLink(this.navLinkDefault);\n\n        this.navBurger.addEventListener('click', () => {\n            this.navBurgerInner.classList.toggle('burger__inner--active');\n            this.navMenu.classList.toggle('nav__menu--visible');\n        });\n\n        this.navLinks.forEach(link => {\n            link.addEventListener('mouseenter', () => {\n                // apply to a slower transition only when other links are hovered\n                this.navRect.style.transition = 'transform var(--animation-time)';\n                this.setRectToLink(link);\n            });\n\n            link.addEventListener('mouseleave', () => {\n                this.setRectToLink(this.navLinkDefault);\n            });\n        });\n    }\n\n    setRectToLink(linkElement) {\n        const linkRect = linkElement.getBoundingClientRect();\n        const navListRect = this.navList.getBoundingClientRect();\n\n        const offsetX = linkRect.left - navListRect.left;\n\n        this.navRect.style.transform = `translateX(${offsetX}px)`;\n    }\n}\n","export default class Hover {\n    constructor() {\n        this.buttons = document.querySelectorAll('.hover-fill');\n\n        this.buttons.forEach(button => {\n          button.addEventListener('mouseenter', function(e) {\n            const parentOffset = button.getBoundingClientRect();\n            const relX = e.pageX - window.scrollX - parentOffset.left;\n            const relY = e.pageY - window.scrollY - parentOffset.top;\n      \n            // Set CSS variables for `::after` positioning\n            button.style.setProperty('--hover-x', `${relX}px`);\n            button.style.setProperty('--hover-y', `${relY}px`);\n          });\n      \n          button.addEventListener('mouseout', function(e) {\n            const parentOffset = button.getBoundingClientRect();\n            const relX = e.pageX - window.scrollX - parentOffset.left;\n            const relY = e.pageY - window.scrollY - parentOffset.top;\n      \n            // Update `--hover-x` and `--hover-y` variables on mouse exit\n            button.style.setProperty('--hover-x', `${relX}px`);\n            button.style.setProperty('--hover-y', `${relY}px`);\n          });\n        });\n    }\n}"],"names":["$54b47fc030b7b21e$var$components","class","constructor","themeCheckbox","document","querySelector","savedTheme","localStorage","getItem","backgrounds","querySelectorAll","themeToApply","window","matchMedia","matches","documentElement","setAttribute","checked","toggleBackgroundDarken","addEventListener","newTheme","setItem","theme","forEach","background","classList","add","remove","selector","navBurger","navBurgerInner","navMenu","navList","navLinks","navLinkDefault","navRect","setRectToLink","toggle","link","style","transition","linkElement","linkRect","getBoundingClientRect","navListRect","offsetX","left","transform","buttons","button","e","parentOffset","relX","pageX","scrollX","relY","pageY","scrollY","top","setProperty","component","element","options"],"version":3,"file":"index.8a6eadbd.js.map"}