{"mappings":"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","sources":["src/js/main.js","src/js/components/cursor.js","src/js/components/theme.js"],"sourcesContent":["import Cursor from './components/cursor';\r\nimport Theme from './components/theme';\r\n\r\nconst components = [\r\n\t{\r\n\t\tclass: Cursor,\r\n\t\tselector: '.cursor'\r\n\t},\r\n\t{\r\n\t\tclass: Theme,\r\n\t\tselector: 'html'\r\n\t}\r\n];\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\t/* Checks if the selector is loaded.\r\n\tIf so, then excecute the corresponding scripts and options */\r\n\r\n\tcomponents.forEach(component => {\r\n\t\tif (document.querySelector(component.selector) !== null) {\r\n\t\t\tdocument.querySelectorAll(component.selector).forEach(\r\n\t\t\t\telement => new component.class(element, component.options)\r\n\t\t\t);\r\n\t\t};\r\n\t});\t\r\n});","export default class Cursor {\r\n  constructor() {\r\n    const coverTargets = document.querySelectorAll('[data-target-cover]');\r\n    const dotTargets = document.querySelectorAll('[data-target-dot]');\r\n    const cursor = document.querySelector('.cursor');\r\n    const cursorInner = document.querySelector('.cursor__inner');\r\n    let hoverState = 'none'; // none; 'dot'; 'cover'\r\n    let cursorPosX = document.documentElement.clientWidth * .5; // center initial mouse position\r\n    let cursorPosY = document.documentElement.clientHeight * .5;\r\n\r\n    let wobbleX = 0, wobbleY = 0; // further adjustments (wobbling while a target hover is triggered) for cursor position\r\n    let cursorBaseWidth = 40; // base width and height\r\n    let cursorWidth = cursorBaseWidth, cursorHeight = cursorBaseWidth; // dyanmic cursor width and height\r\n\r\n    let hoverPosX = 0, hoverPosY = 0;\r\n    let dotOffsetX = 20, dotOffsetY = 20; // dot placement off the bottom right while hovered\r\n    let wobble = 5;\r\n\r\n    let lastUpdateTime = 0;\r\n\r\n    let sensitivity = .3; // Adjust the sensitivity factor (between 0 and 1)\r\n    let borderRadiusAnimationSpeed = 1000; // in seconds\r\n\r\n    function updateCursor(x, y) {\r\n      cursor.style.transform = `translate(${x}px, ${y}px)`;\r\n    }\r\n\r\n    function updateCursorInner(w, h) {\r\n      let scaleX = w / cursorBaseWidth;\r\n      let scaleY = h / cursorBaseWidth;\r\n      cursorInner.style.transform = `scale(${scaleX}, ${scaleY})`;\r\n    }\r\n\r\n    function updateCursorStyle () {\r\n      if (hoverState === 'none') {\r\n        cursorInner.classList.add('cursor--no-target');\r\n        cursorInner.classList.remove('cursor--dot');\r\n        cursorInner.classList.remove('cursor--cover');\r\n      } else if (hoverState === 'dot') {\r\n        cursorInner.classList.add('cursor--dot');\r\n        cursorInner.classList.remove('cursor--no-target');\r\n        cursorInner.classList.remove('cursor--cover');\r\n      } else if (hoverState === 'cover') {\r\n        cursorInner.classList.add('cursor--cover');\r\n        cursorInner.classList.remove('cursor--no-target');\r\n        cursorInner.classList.remove('cursor--dot');\r\n      }\r\n    };\r\n\r\n    updateCursorStyle();\r\n\r\n    // update position, dimension, and styles according to state\r\n    document.addEventListener('mousemove', (e) => {\r\n      if (hoverState === 'cover' || hoverState === 'dot') {\r\n        cursorPosX = hoverPosX + wobbleX - cursorBaseWidth * .5;\r\n        cursorPosY = hoverPosY + wobbleY - cursorBaseWidth * .5;\r\n      } else {\r\n        cursorPosX = e.clientX - cursorWidth * .5;\r\n        cursorPosY = e.clientY - cursorHeight * .5;\r\n      }\r\n      \r\n      updateCursorStyle();\r\n      updateCursor(cursorPosX, cursorPosY);\r\n      updateCursorInner(cursorWidth, cursorHeight);\r\n    });\r\n\r\n    // reset cursor state after scroll\r\n    document.addEventListener('scroll', () => {\r\n      hoverState = 'none';\r\n      updateCursorStyle();\r\n    });\r\n\r\n    // mouse shadow covers the entire target\r\n    coverTargets.forEach(coverTarget => {\r\n      coverTarget.addEventListener('mousemove', (e) => {\r\n        hoverState = 'cover';\r\n\r\n        let rect = coverTarget.getBoundingClientRect();\r\n        \r\n        cursorWidth = rect.width;\r\n        cursorHeight = rect.height;\r\n\r\n        hoverPosX = (rect.left + rect.right) * .5; // hover position x at center of object\r\n        hoverPosY = (rect.top + rect.bottom) * .5; // hover position y at center of object\r\n\r\n        wobbleX = (e.clientX - hoverPosX) / rect.width * wobble; // adjustment on width\r\n        wobbleY = (e.clientY - hoverPosY) / rect.height * wobble; // adjustment on height\r\n\r\n        updateCursorStyle();\r\n      });\r\n\r\n      coverTarget.addEventListener('mouseleave', (e) => {\r\n        hoverState = 'none';\r\n\r\n        cursorWidth = cursorBaseWidth;\r\n        cursorHeight = cursorBaseWidth;\r\n\r\n        updateCursorStyle();\r\n      });\r\n    });\r\n\r\n    // transform into a dot\r\n    dotTargets.forEach(dotTarget => {\r\n      dotTarget.addEventListener('mousemove', (e) => {\r\n        hoverState = 'dot';\r\n\r\n        // get bounding dimensions\r\n        let rect = dotTarget.getBoundingClientRect();\r\n\r\n        hoverPosX = rect.right;\r\n        hoverPosY = rect.bottom;\r\n\r\n        wobbleX = (e.clientX - (rect.left + rect.right) * .5) * wobble * .005;\r\n        wobbleY = (e.clientY - (rect.top + rect.bottom) * .5) * wobble * .005;\r\n\r\n        updateCursorStyle();\r\n      });\r\n\r\n      dotTarget.addEventListener('mouseleave', (e) => {\r\n        hoverState = 'none';\r\n\r\n        updateCursorStyle();\r\n       });\r\n    });\r\n  }\r\n}","export default class Theme {\r\n  constructor() {\r\n    let isDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n\r\n    if (isDarkMode) {\r\n      document.documentElement.setAttribute('data-theme', 'dark');\r\n    } else {\r\n      document.documentElement.setAttribute('data-theme', 'light');\r\n    }\r\n\r\n    // updates popup when system changes\r\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {\r\n      if (e.matches) {\r\n        document.documentElement.setAttribute('data-theme', 'dark');\r\n      } else {\r\n        document.documentElement.setAttribute('data-theme', 'light');\r\n      }\r\n    });\r\n  }\r\n}"],"names":["$54b47fc030b7b21e$var$components","class","constructor","coverTargets","document","querySelectorAll","dotTargets","cursor","querySelector","cursorInner","hoverState","cursorPosX","documentElement","clientWidth","cursorPosY","clientHeight","wobbleX","wobbleY","cursorBaseWidth","cursorWidth","cursorHeight","hoverPosX","hoverPosY","updateCursorStyle","classList","add","remove","addEventListener","e","x","y","clientX","clientY","style","transform","w","h","scaleX","scaleY","updateCursorInner","forEach","coverTarget","rect","getBoundingClientRect","width","height","left","right","top","bottom","dotTarget","selector","window","matchMedia","matches","setAttribute","component","element","options"],"version":3,"file":"index.e2b680c0.js.map"}