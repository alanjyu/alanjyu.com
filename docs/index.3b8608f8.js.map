{"mappings":"ACKA,MAAM,EAAa,CAClB,CACC,MCPa,MACb,aAAc,CACZ,IAAM,EAAgB,SAAS,cAAc,CAAC,YAExC,EAAe,AADF,aAAa,OAAO,CAAC,UACL,IAGnC,SAAS,eAAe,CAAC,YAAY,CAAC,aAAc,GAGpD,EAAc,OAAO,CAAG,AAAiB,SAAjB,EAGxB,IAAM,EAAiB,IACd,OAAO,UAAU,EAAI,OAAO,UAAU,CAAC,gCAAgC,OAAO,CAAG,OAAS,QAInG,EAAc,gBAAgB,CAAC,SAAU,KACvC,IAAM,EAAW,EAAc,OAAO,CAAG,OAAS,QAElD,SAAS,eAAe,CAAC,YAAY,CAAC,aAAc,GACpD,aAAa,OAAO,CAAC,QAAS,GAC9B,QAAQ,GAAG,CAAC,aAAa,OAAO,CAAC,SACnC,EACF,CACF,EDlBE,SAAU,MACX,EACA,CACC,MEXa,MACX,aAAc,CAEV,IAAM,EAAW,SAAS,gBAAgB,CAAC,cAGvC,EAAoB,SAAS,aAAa,CAAC,sBAG/C,EAAS,OAAO,CAAC,AAAA,IACb,EAAK,gBAAgB,CAAC,aAAc,KAEhC,EAAkB,SAAS,CAAC,MAAM,CAAC,qBAEnC,EAAK,SAAS,CAAC,GAAG,CAAC,oBACvB,GAEA,EAAK,gBAAgB,CAAC,aAAc,KAEhC,EAAK,SAAS,CAAC,MAAM,CAAC,qBAEtB,EAAkB,SAAS,CAAC,GAAG,CAAC,oBACpC,EACJ,EACJ,CACJ,EFbE,SAAU,KACX,EACA,CACC,MGfa,MACX,aAAc,CAGV,AAFgB,SAAS,gBAAgB,CAAC,eAElC,OAAO,CAAC,AAAA,IACd,EAAO,gBAAgB,CAAC,aAAc,SAAS,CAAC,EAC9C,IAAM,EAAe,EAAO,qBAAqB,GAC3C,EAAO,EAAE,KAAK,CAAG,OAAO,OAAO,CAAG,EAAa,IAAI,CACnD,EAAO,EAAE,KAAK,CAAG,OAAO,OAAO,CAAG,EAAa,GAAG,CAGxD,EAAO,KAAK,CAAC,WAAW,CAAC,YAAa,CAAC,EAAE,EAAK,EAAE,CAAC,EACjD,EAAO,KAAK,CAAC,WAAW,CAAC,YAAa,CAAC,EAAE,EAAK,EAAE,CAAC,CACnD,GAEA,EAAO,gBAAgB,CAAC,WAAY,SAAS,CAAC,EAC5C,IAAM,EAAe,EAAO,qBAAqB,GAC3C,EAAO,EAAE,KAAK,CAAG,OAAO,OAAO,CAAG,EAAa,IAAI,CACnD,EAAO,EAAE,KAAK,CAAG,OAAO,OAAO,CAAG,EAAa,GAAG,CAGxD,EAAO,KAAK,CAAC,WAAW,CAAC,YAAa,CAAC,EAAE,EAAK,EAAE,CAAC,EACjD,EAAO,KAAK,CAAC,WAAW,CAAC,YAAa,CAAC,EAAE,EAAK,EAAE,CAAC,CACnD,EACF,EACJ,CACJ,EHVE,SAAU,MACX,EACA,CAED,SAAS,gBAAgB,CAAC,mBAAoB,KAG7C,EAAW,OAAO,CAAC,AAAA,IACiC,OAA/C,SAAS,aAAa,CAAC,EAAU,QAAQ,GAC5C,SAAS,gBAAgB,CAAC,EAAU,QAAQ,EAAE,OAAO,CACpD,AAAA,GAAW,IAAI,EAAU,KAAK,CAAC,EAAS,EAAU,OAAO,EAG5D,EACD","sources":["<anon>","src/js/main.js","src/js/_theme.js","src/js/_nav.js","src/js/_hover.js"],"sourcesContent":["// import Cursor from './components/cursor';\nclass $0691dea19d337f73$export$2e2bcd8739ae039 {\n    constructor(){\n        const themeCheckbox = document.getElementById(\"checkbox\");\n        const savedTheme = localStorage.getItem(\"theme\");\n        const themeToApply = savedTheme || getSystemTheme();\n        // Apply the theme\n        document.documentElement.setAttribute(\"data-theme\", themeToApply);\n        // Set checkbox state based on applied theme\n        themeCheckbox.checked = themeToApply === \"dark\";\n        // Get the system's theme preference\n        const getSystemTheme = ()=>{\n            return window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n        };\n        // Toggle theme and save preference\n        themeCheckbox.addEventListener(\"change\", ()=>{\n            const newTheme = themeCheckbox.checked ? \"dark\" : \"light\";\n            document.documentElement.setAttribute(\"data-theme\", newTheme);\n            localStorage.setItem(\"theme\", newTheme);\n            console.log(localStorage.getItem(\"theme\"));\n        });\n    }\n}\n\n\nclass $4f3d5d8c89b91b2c$export$2e2bcd8739ae039 {\n    constructor(){\n        // Select all nav links\n        const navLinks = document.querySelectorAll(\".nav__link\");\n        // Track the currently active link\n        let currentActiveLink = document.querySelector(\".nav__link__active\");\n        // Add event listeners to each link\n        navLinks.forEach((link)=>{\n            link.addEventListener(\"mouseenter\", ()=>{\n                // Remove active class from current link\n                currentActiveLink.classList.remove(\"nav__link__active\");\n                // Add active class to hovered link\n                link.classList.add(\"nav__link__active\");\n            });\n            link.addEventListener(\"mouseleave\", ()=>{\n                // Remove active class from hovered link\n                link.classList.remove(\"nav__link__active\");\n                // Restore active class to original active link\n                currentActiveLink.classList.add(\"nav__link__active\");\n            });\n        });\n    }\n}\n\n\nclass $e335b4938ad3ca6f$export$2e2bcd8739ae039 {\n    constructor(){\n        const buttons = document.querySelectorAll(\".hover-fill\");\n        buttons.forEach((button)=>{\n            button.addEventListener(\"mouseenter\", function(e) {\n                const parentOffset = button.getBoundingClientRect();\n                const relX = e.pageX - window.scrollX - parentOffset.left;\n                const relY = e.pageY - window.scrollY - parentOffset.top;\n                // Set CSS variables for `::after` positioning\n                button.style.setProperty(\"--hover-x\", `${relX}px`);\n                button.style.setProperty(\"--hover-y\", `${relY}px`);\n            });\n            button.addEventListener(\"mouseout\", function(e) {\n                const parentOffset = button.getBoundingClientRect();\n                const relX = e.pageX - window.scrollX - parentOffset.left;\n                const relY = e.pageY - window.scrollY - parentOffset.top;\n                // Update `--hover-x` and `--hover-y` variables on mouse exit\n                button.style.setProperty(\"--hover-x\", `${relX}px`);\n                button.style.setProperty(\"--hover-y\", `${relY}px`);\n            });\n        });\n    }\n}\n\n\nconst $54b47fc030b7b21e$var$components = [\n    {\n        class: (0, $0691dea19d337f73$export$2e2bcd8739ae039),\n        selector: \"html\"\n    },\n    {\n        class: (0, $4f3d5d8c89b91b2c$export$2e2bcd8739ae039),\n        selector: \"nav\"\n    },\n    {\n        class: (0, $e335b4938ad3ca6f$export$2e2bcd8739ae039),\n        selector: \"html\"\n    }\n];\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    /* Checks if the selector is loaded.\r\n\tIf so, then excecute the corresponding scripts and options */ $54b47fc030b7b21e$var$components.forEach((component)=>{\n        if (document.querySelector(component.selector) !== null) document.querySelectorAll(component.selector).forEach((element)=>new component.class(element, component.options));\n    });\n});\n\n\n//# sourceMappingURL=index.3b8608f8.js.map\n","// import Cursor from './components/cursor';\r\nimport Theme from './_theme.js';\r\nimport Nav from './_nav.js';\r\nimport Hover from './_hover.js';\r\n\r\nconst components = [\r\n\t{\r\n\t\tclass: Theme,\r\n\t\tselector: 'html'\r\n\t},\r\n\t{\r\n\t\tclass: Nav,\r\n\t\tselector: 'nav'\r\n\t},\r\n\t{\r\n\t\tclass: Hover,\r\n\t\tselector: 'html'\r\n\t}\r\n];\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\t/* Checks if the selector is loaded.\r\n\tIf so, then excecute the corresponding scripts and options */\r\n\tcomponents.forEach(component => {\r\n\t\tif (document.querySelector(component.selector) !== null) {\r\n\t\t\tdocument.querySelectorAll(component.selector).forEach(\r\n\t\t\t\telement => new component.class(element, component.options)\r\n\t\t\t);\r\n\t\t};\r\n\t});\t\r\n});","export default class Theme {\r\n  constructor() {\r\n    const themeCheckbox = document.getElementById('checkbox');\r\n    const savedTheme = localStorage.getItem('theme');\r\n    const themeToApply = savedTheme || getSystemTheme();\r\n\r\n    // Apply the theme\r\n    document.documentElement.setAttribute('data-theme', themeToApply);\r\n\r\n    // Set checkbox state based on applied theme\r\n    themeCheckbox.checked = themeToApply === 'dark';\r\n    \r\n    // Get the system's theme preference\r\n    const getSystemTheme = () => {\r\n      return window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\r\n    };\r\n    \r\n    // Toggle theme and save preference\r\n    themeCheckbox.addEventListener('change', () => {\r\n      const newTheme = themeCheckbox.checked ? 'dark' : 'light';\r\n    \r\n      document.documentElement.setAttribute('data-theme', newTheme);\r\n      localStorage.setItem('theme', newTheme);\r\n      console.log(localStorage.getItem('theme'))\r\n    });      \r\n  }\r\n}","export default class Nav {\r\n    constructor() {\r\n        // Select all nav links\r\n        const navLinks = document.querySelectorAll('.nav__link');\r\n\r\n        // Track the currently active link\r\n        let currentActiveLink = document.querySelector('.nav__link__active');\r\n\r\n        // Add event listeners to each link\r\n        navLinks.forEach(link => {\r\n            link.addEventListener('mouseenter', () => {\r\n                // Remove active class from current link\r\n                currentActiveLink.classList.remove('nav__link__active');\r\n                // Add active class to hovered link\r\n                link.classList.add('nav__link__active');\r\n            });\r\n\r\n            link.addEventListener('mouseleave', () => {\r\n                // Remove active class from hovered link\r\n                link.classList.remove('nav__link__active');\r\n                // Restore active class to original active link\r\n                currentActiveLink.classList.add('nav__link__active');\r\n            });\r\n        });   \r\n    }\r\n}","export default class Hover {\r\n    constructor() {\r\n        const buttons = document.querySelectorAll('.hover-fill');\r\n\r\n        buttons.forEach(button => {\r\n          button.addEventListener('mouseenter', function(e) {\r\n            const parentOffset = button.getBoundingClientRect();\r\n            const relX = e.pageX - window.scrollX - parentOffset.left;\r\n            const relY = e.pageY - window.scrollY - parentOffset.top;\r\n      \r\n            // Set CSS variables for `::after` positioning\r\n            button.style.setProperty('--hover-x', `${relX}px`);\r\n            button.style.setProperty('--hover-y', `${relY}px`);\r\n          });\r\n      \r\n          button.addEventListener('mouseout', function(e) {\r\n            const parentOffset = button.getBoundingClientRect();\r\n            const relX = e.pageX - window.scrollX - parentOffset.left;\r\n            const relY = e.pageY - window.scrollY - parentOffset.top;\r\n      \r\n            // Update `--hover-x` and `--hover-y` variables on mouse exit\r\n            button.style.setProperty('--hover-x', `${relX}px`);\r\n            button.style.setProperty('--hover-y', `${relY}px`);\r\n          });\r\n        });\r\n    }\r\n}"],"names":["$54b47fc030b7b21e$var$components","class","constructor","themeCheckbox","document","getElementById","themeToApply","savedTheme","localStorage","getItem","getSystemTheme","documentElement","setAttribute","checked","window","matchMedia","matches","addEventListener","newTheme","setItem","console","log","selector","navLinks","querySelectorAll","currentActiveLink","querySelector","forEach","link","classList","remove","add","buttons","button","e","parentOffset","getBoundingClientRect","relX","pageX","scrollX","left","relY","pageY","scrollY","top","style","setProperty","component","element","options"],"version":3,"file":"index.3b8608f8.js.map"}